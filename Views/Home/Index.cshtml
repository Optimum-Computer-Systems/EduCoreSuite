@model EduCoreSuite.Models.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid px-4">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
            <p class="text-muted mb-0">Welcome to EduCoreSuite Analytics</p>
        </div>
        <div class="text-muted">
            <i class="fas fa-calendar-alt me-2"></i>
            @DateTime.Now.ToString("MMMM dd, yyyy")
        </div>
    </div>

    <!-- Key Metrics Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Total Students</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalStudents.ToString("N0")</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-users fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Total Courses</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalCourses.ToString("N0")</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-book fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Active Campuses</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalCampuses.ToString("N0")</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-university fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Total Staff</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalStaff.ToString("N0")</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-user-tie fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row - Kenyan School Priority Charts -->
    <div class="row mb-4">
        <!-- Enrollment by Academic Year -->
        <div class="col-xl-4 col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <div>
                        <h6 class="m-0 font-weight-bold text-primary">Enrollment by Academic Year</h6>
                        <small class="text-muted">Student distribution across year levels</small>
                    </div>
                </div>
                <div class="card-body">
                    <div class="chart-pie pt-4 pb-2">
                        <canvas id="academicYearChart"></canvas>
                    </div>
                    <div class="mt-4 text-center small">
                        @foreach (var year in Model.EnrollmentByAcademicYear)
                        {
                            <span class="mr-2 mb-1 d-inline-block">
                                <i class="fas fa-circle" style="color: @year.Color"></i> @year.YearLevel: @year.StudentCount (@year.Percentage%)
                            </span>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Enrollment by Department -->
        <div class="col-xl-4 col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Enrollment by Department</h6>
                    <small class="text-muted">Top departments by student count</small>
                </div>
                <div class="card-body">
                    <div class="chart-bar">
                        <canvas id="departmentChart" width="100%" height="50"></canvas>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Enrollment by Program Type -->
        <div class="col-xl-4 col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <div>
                        <h6 class="m-0 font-weight-bold text-primary">Enrollment by Program Type</h6>
                        <small class="text-muted">Certificate, Diploma, Degree, Masters</small>
                    </div>
                </div>
                <div class="card-body">
                    <div class="chart-pie pt-4 pb-2">
                        <canvas id="programTypeChart"></canvas>
                    </div>
                    <div class="mt-4 text-center small">
                        @foreach (var program in Model.EnrollmentByProgramType)
                        {
                            <span class="mr-2 mb-1 d-inline-block">
                                <i class="fas fa-circle" style="color: @program.Color"></i> @program.ProgramType: @program.StudentCount (@program.Percentage%)
                            </span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activities -->
    <div class="row mb-4">
        <div class="col-xl-12">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Recent Activities</h6>
                </div>
                <div class="card-body" style="max-height: 400px; overflow-y: auto;">
                    @if (Model.RecentActivities.Any())
                    {
                        foreach (var activity in Model.RecentActivities)
                        {
                            <div class="d-flex align-items-center mb-3">
                                <div class="mr-3">
                                    <div class="icon-circle bg-light">
                                        <i class="@activity.Icon @activity.IconColor"></i>
                                    </div>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="small text-gray-500">@activity.TimeAgo</div>
                                    <div class="font-weight-bold">@activity.Title</div>
                                    <div class="text-gray-600 small">@activity.Description</div>
                                </div>
                            </div>
                            @if (activity != Model.RecentActivities.Last())
                            {
                                <hr class="my-3">
                            }
                        }
                    }
                    else
                    {
                        <div class="text-center text-muted py-4">
                            <i class="fas fa-info-circle fa-2x mb-3"></i>
                            <p>No recent activities to display</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Chart.js Scripts -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // Enrollment by Academic Year Chart
    const academicYearCtx = document.getElementById('academicYearChart').getContext('2d');
    const academicYearChart = new Chart(academicYearCtx, {
        type: 'doughnut',
        data: {
            labels: [@Html.Raw(string.Join(",", Model.EnrollmentByAcademicYear.Select(y => $"'{y.YearLevel}'")))],
            datasets: [{
                data: [@string.Join(",", Model.EnrollmentByAcademicYear.Select(y => y.StudentCount))],
                backgroundColor: [@Html.Raw(string.Join(",", Model.EnrollmentByAcademicYear.Select(y => $"'{y.Color}'")))],
                borderWidth: 2,
                borderColor: '#ffffff'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            const label = context.label || '';
                            const value = context.raw || 0;
                            const percentage = Model.EnrollmentByAcademicYear[context.dataIndex].Percentage;
                            return `${label}: ${value} students (${percentage}%)`;
                        }
                    }
                }
            },
            cutout: '60%'
        }
    });

    // Enrollment by Department Chart
    const departmentCtx = document.getElementById('departmentChart').getContext('2d');
    const departmentChart = new Chart(departmentCtx, {
        type: 'bar',
        data: {
            labels: [@Html.Raw(string.Join(",", Model.StudentsByDepartment.Select(d => $"'{d.DepartmentName}'")))],
            datasets: [{
                label: 'Students',
                data: [@string.Join(",", Model.StudentsByDepartment.Select(d => d.StudentCount))],
                backgroundColor: [@Html.Raw(string.Join(",", Model.StudentsByDepartment.Select(d => $"'{d.Color}'")))],
                borderWidth: 1
            }]
        },
        options: {
            indexAxis: 'y', // Horizontal bar chart
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                }
            },
            scales: {
                x: {
                    beginAtZero: true,
                    grid: {
                        color: '#e3e6f0'
                    },
                    ticks: {
                        precision: 0 // Only show whole numbers
                    }
                },
                y: {
                    grid: {
                        display: false
                    }
                }
            }
        }
    });
    
    // Enrollment by Program Type Chart
    const programTypeCtx = document.getElementById('programTypeChart').getContext('2d');
    const programTypeChart = new Chart(programTypeCtx, {
        type: 'pie',
        data: {
            labels: [@Html.Raw(string.Join(",", Model.EnrollmentByProgramType.Select(p => $"'{p.ProgramType}'")))],
            datasets: [{
                data: [@string.Join(",", Model.EnrollmentByProgramType.Select(p => p.StudentCount))],
                backgroundColor: [@Html.Raw(string.Join(",", Model.EnrollmentByProgramType.Select(p => $"'{p.Color}'")))],
                borderWidth: 2,
                borderColor: '#ffffff'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            const label = context.label || '';
                            const value = context.raw || 0;
                            const percentage = Model.EnrollmentByProgramType[context.dataIndex].Percentage;
                            return `${label}: ${value} students (${percentage}%)`;
                        }
                    }
                }
            }
        }
    });

</script>

<style>
.border-left-primary {
    border-left: 0.25rem solid #4e73df !important;
}

.border-left-success {
    border-left: 0.25rem solid #1cc88a !important;
}

.border-left-info {
    border-left: 0.25rem solid #36b9cc !important;
}

.border-left-warning {
    border-left: 0.25rem solid #f6c23e !important;
}

.text-gray-800 {
    color: #5a5c69 !important;
}

.text-gray-600 {
    color: #6c757d !important;
}

.text-gray-500 {
    color: #858796 !important;
}

.text-gray-300 {
    color: #dddfeb !important;
}

.icon-circle {
    height: 2.5rem;
    width: 2.5rem;
    border-radius: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.chart-area {
    position: relative;
    height: 320px;
}

.chart-pie {
    position: relative;
    height: 245px;
}

.chart-bar {
    position: relative;
    height: 320px;
}

.card {
    border: none;
    box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15) !important;
}

.font-weight-bold {
    font-weight: 700 !important;
}

.text-xs {
    font-size: 0.7rem;
}
</style>